name: Continuos Integration

on:
  push:
    branches-ignore:
      - main
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  TF_PLUGIN_CACHE_DIR: ${{ github.workspace }}/.terraform.d/plugin-cache

jobs:
  paths_filter:
    runs-on: ubuntu-22.04
    permissions:
      actions: read
      contents: read
    outputs:
      infrastructure: ${{ steps.filter.outputs.infrastructure }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup paths filter
      uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          infrastructure:
            - 'infrastructure/terraform/**'

  ci_infrastructure:
    needs: paths_filter
    if: ${{ needs.paths_filter.outputs.infrastructure == 'true' }}
    runs-on: ubuntu-22.04
    permissions:
      actions: read
      contents: read
      id-token: write
    defaults:
      run:
        working-directory: infrastructure/terraform
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.ROLE_ARN }}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create Terraform plugin cache directory
        run: mkdir -p ${{ env.TF_PLUGIN_CACHE_DIR }}

      - name: Cache Terraform
        uses: actions/cache@v3
        with:
          path: ${{ env.TF_PLUGIN_CACHE_DIR }}
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/.terraform.lock.hcl') }}
          restore-keys: ${{ runner.os }}-terraform-

      - name: Get Terraform version
        id: get_version
        run: echo "TERRAFORM_VERSION=$(cat .terraform.version)" >> $GITHUB_OUTPUT

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
          terraform_version: ${{ steps.get_version.outputs.TERRAFORM_VERSION }}

      - name: Initialize Terraform
        run: terraform init

      - name: Run Terraform plan
        run: terraform plan

  ci_app:
    runs-on: ubuntu-22.04
    permissions:
      actions: read
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      
      - name: Vulnerability assessment of dependencies
        run: npm audit --audit-level=critical
      
      - name: Install Dependencies       
        run: npm ci --no-audit    
      
      - name: Lint code
        run: npm run lint
      
      - name: Run unit tests
        run: npm test
      
      - name: Build
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build

    
      

      
