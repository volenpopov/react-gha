name: Continuous Deployment

on:
  push:
    branches:
      - main
      
env:
  AWS_REGION: us-east-1
  TF_FOLDER_PATH: infrastructure/terraform
  TF_EXECUTION_PLAN_FILE_NAME: execution-plan
  TF_PLUGIN_CACHE_DIR: ${{ github.workspace }}/.terraform.d/plugin-cache

jobs:
  infrastructure:
    runs-on: ubuntu-22.04
    permissions:
      actions: read
      contents: read
      id-token: write
    outputs:
      bucket_name: ${{ steps.tf_apply.outputs.BUCKET_NAME }}
    defaults:
      run:
        working-directory: ${{ env.TF_FOLDER_PATH }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create Terraform plugin cache directory
        run: mkdir -p ${{ env.TF_PLUGIN_CACHE_DIR }}

      - name: Cache Terraform plugins
        uses: actions/cache@v3
        with:
          path: ${{ env.TF_PLUGIN_CACHE_DIR }}
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/terraform/.terraform.lock.hcl') }}
          restore-keys: ${{ runner.os }}-terraform-

      - name: Get Terraform version
        id: get_tf_version
        run: echo "TF_VERSION=$(cat .terraform.version)" >> $GITHUB_OUTPUT

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
          terraform_version: ${{ steps.get_tf_version.outputs.TF_VERSION }}

      - name: Terraform Format
        run: terraform fmt -check

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.ROLE_ARN }}

      - name: Initialize Terraform
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=${{ env.TF_EXECUTION_PLAN_FILE_NAME }}

      - name: Upload plan artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.TF_EXECUTION_PLAN_FILE_NAME }}
          path: ${{ env.TF_FOLDER_PATH }}/${{ env.TF_EXECUTION_PLAN_FILE_NAME }}
          
      - name: Terraform Apply
        id: tf_apply
        run: |
          terraform apply ${{ env.TF_EXECUTION_PLAN_FILE_NAME }}
          echo "BUCKET_NAME=$(terraform output bucket_name)" >> $GITHUB_OUTPUT 
  
  application:
    runs-on: ubuntu-22.04
    permissions:
      actions: read
      contents: write
      id-token: write
      issues: write
      pull-requests: write
    needs: infrastructure
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
      
      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      
      - name: Vulnerability assessment of dependencies
        run: npm audit --audit-level=critical
      
      - name: Install Dependencies       
        run: npm ci --no-audit    
      
      - name: Lint code
        run: npm run lint
      
      - name: Unit testing
        run: npm test
      
      - name: Build
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build

      - name: Release
        uses: cycjimmy/semantic-release-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          dry_run: true
            
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.ROLE_ARN }}

      - name: Sync build with S3
        run: |
          aws s3 sync build s3://${{ needs.infrastructure.outputs.bucket_name }} --delete --cache-control 'no-cache' --exclude 'static/**/*'
          aws s3 sync build s3://${{ needs.infrastructure.outputs.bucket_name }} --cache-control 'max-age=31536000'